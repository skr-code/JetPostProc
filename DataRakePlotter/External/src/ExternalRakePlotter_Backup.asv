%Cleaning
clear
clc
clf

%Setting the format
format long

%User input------------------

%Number of Rake Lines
NumberOfRakeLines = 3;

%Name of simulation that first set of files is coming from
SimulationTitle1 = 'ICDB-M2-P1';
File1 = '../input1/externalcenterline.dat';
File2 = '../input1/external0point2D.dat';
File3 = '../input1/external0point4D.dat';

%Name of the simulation that the second set of files is coming from
IsSecondSimulation = 0;
SimulationTitle2 = 'ICDB-V2-P1';
File4 = '../input2/externalcenterline.dat';
File5 = '../input2/external0point2D.dat';
File6 = '../input2/external0point4D.dat';

%Desired Data Columns
DesiredData1 = 15; %PitotPressure
DesiredData2 = 16;  %Total Temperature
DesiredData3 = 8;   %Static Pressure

%Normalization Pitot Pressure
Pitotnorm = 101325;

%Normalization Temperature
Tnorm = 300;

%Normalization Static Pressure
StaticPnorm = 101325;

%Pitot Pressure Graph Plotting
pitotpresxlimmin = 0;
pitotpresxlimmax = 12;
pitotpresylimmin = 1.5;
pitotpresylimmax = 3.5;

%Static Pressure Graph Plotting
staticpresxlimmin = 0;
staticpresxlimmax = 12;
staticpresylimmin = 1.5;
staticpresylimmax = 3.5;

%Temperature Graph Plotting
tempxlimmin = 0;
tempxlimmax = 12;
tempylimmin = 0.9;
tempylimmax = 1.1;

%------------------------------
%% Importing the Reference Data
disp('Extracting The Reference Data...');
Z = importdata('../ReferenceData/ReferenceData.txt');
LiuLESPitotPressure(:,1) = Z.data(1:end,1);
LiuLESPitotPressure(:,2) = Z.data(1:end,2);
LiuProbePitotPressure(:,1) = Z.data(1:end,4);
LiuProbePitotPressure(:,2) = Z.data(1:end,5);
LiuLESStaticPressure(:,1) = Z.data(1:end,10);
LiuLESStaticPressure(:,2) = Z.data(1:end,11);
disp('Reference Data Extracted!');

%% Grabbing Data from First File
%Looping through all of the data files to extract the pressure data
disp('Extracting the Coordinate Points...'); 
A = importdata(File1);
Xcoor(:,:) = A.data(1:end,1);

%Calculating the the X/D as defined by the nozzle exit diameter
XOverD = Xcoor./0.0728472;
disp('Coordinate Point Extraction Complete!');

%Extracting the data from the first simulation
disp('Extracting Desired Data For The First Simulation...');
PitotPressureSet1(:,:) = A.data(1:end,DesiredData1);
TemperatureSet1(:,:) = A.data(1:end,DesiredData2);
StaticPressureSet1(:,:) = A.data(1:end,DesiredData3);

if NumberOfRakeLines >= 2
    B = importdata(File2);
    PitotPressureSet1(:,2) = B.data(1:end,DesiredData1);
    TemperatureSet1(:,2) = B.data(1:end,DesiredData2);
    StaticPressureSet1(:,2) = B.data(1:end,DesiredData3);
end
   
if NumberOfRakeLines == 3
    C = importdata(File3);
    PitotPressureSet1(:,3) = C.data(1:end,DesiredData1);
    TemperatureSet1(:,3) = C.data(1:end,DesiredData2);
    StaticPressureSet1(:,3) = C.data(1:end,DesiredData3);
end
disp('First Simulation Data Extraction Complete!');
   
disp('Normalizing Pressure Data From The First Simulation...');
if Pitotnorm ~= 0
    PitotPressureSet1 = PitotPressureSet1./Pitotnorm;
end

if Tnorm ~= 0
    TemperatureSet1 = TemperatureSet1./Tnorm;
end

if StaticPnorm ~= 0
    StaticPressureSet1 = StaticPressureSet1./StaticPnorm;
end
disp('Data Normalization of First Simulation Complete!');

%% Grabbing from Second File
if IsSecondSimulation == 1 
    disp('Extracting Desired Data For The Second Simulation...');
    D = importdata(File4);
    PitotPressureSet2(:,:) = D.data(1:end,DesiredData1);
    TemperatureSet2(:,:) = D.data(1:end,DesiredData2);
    StaticPressureSet2(:,:) = D.data(1:end,DesiredData3);
    
    if NumberOfRakeLines >= 2
        E = importdata(File5);
        PitotPressureSet2(:,2) = E.data(1:end,DesiredData1);
        TemperatureSet2(:,2) = E.data(1:end,DesiredData2);
        StaticPressureSet2(:,2) = E.data(1:end,DesiredData3);
    end

    if NumberOfRakeLines == 3
        F = importdata(File6);
        PitotPressureSet2(:,3) = F.data(1:end,DesiredData1);
        TemperatureSet2(:,3) = F.data(1:end,DesiredData2);
        StaticPressureSet1(:,3) = F.data(1:end,DesiredData3);
    end
    disp('Second Simulation Data Extraction Complete!');
    
disp('Normalizing Pressure Data From The Second Simulation...');
    if Pitotnorm ~= 0
        PitotPressureSet2 = PitotPressureSet2./Pitotnorm;
    end
    
    if Tnorm ~= 0
    TemperatureSet2 = TemperatureSet2./Tnorm;
    end
    
    if StaticPnorm ~= 0
    StaticPressureSet2 = StaticPressureSet2./StaticPnorm;
    end
disp('Data Normalization of Second Simulation Complete!');
end
%% Pitot Pressure Plotting
disp('Plotting...');

%Plotting the Centerline Pressure Values
subplot(3,1,3)
hold on
plot(XOverD(:,1),PitotPressureSet1(:,1));
plot(LiuLESPitotPressure(:,1),LiuLESPitotPressure(:,2));
plot(LiuProbePitotPressure(:,1),LiuProbePitotPressure(:,2),'ks');
if IsSecondSimulation == 1 
    plot(XOverD(:,1),PitotPressureSet2(:,1));
end
hold off
title('Centerline Pitot Pressure Ratio Vs X/D')
axis([pitotpresxlimmin pitotpresxlimmax pitotpresylimmin pitotpresylimmax])
xlabel('X/De')
ylabel('Pitot Pressure/Pinf')
grid on
grid minor
legend(SimulationTitle1,SimulationTitle2,'Location','best')

%Plotting the Y = 0.2D Pressure Values
subplot(3,1,2)
hold on
plot(XOverD(:,1),PitotPressureSet1(:,2));
if IsSecondSimulation == 1 
    plot(XOverD(:,1),PitotPressureSet2(:,2));
end
hold off
title('Y = 0.2D Pitot Pressure RatioVs X/D')
axis([pitotpresxlimmin pitotpresxlimmax pitotpresylimmin pitotpresylimmax])
xlabel('X/De')
ylabel('Pitot Pressure/Pinf')
grid on
grid minor
legend(SimulationTitle1,SimulationTitle2,'Location','best')

%Plotting the Y = 0.4D Pressure Values
subplot(3,1,1)
hold on
plot(XOverD(:,1),PitotPressureSet1(:,3));
if IsSecondSimulation == 1 
    plot(XOverD(:,1),PitotPressureSet2(:,3));
end
hold off
title('Y = 0.4D Pitot Pressure Ratio Vs X/D')
axis([pitotpresxlimmin pitotpresxlimmax pitotpresylimmin pitotpresylimmax])
xlabel('X/De')
ylabel('Pitot Pressure/Pinf')
grid on
grid minor
legend(SimulationTitle1,SimulationTitle2,'Location','best')

%% Total Temperature Plotting

%Plotting the Centerline Temperature Values
figure 
subplot(3,1,3)
hold on
plot(XOverD(:,1),TemperatureSet1(:,1));
if IsSecondSimulation == 1 
    plot(XOverD(:,1),TemperatureSet2(:,1));
end
hold off
title('Centerline Total Temperature Ratio Vs X/D')
axis([tempxlimmin tempxlimmax tempylimmin tempylimmax])
xlabel('X/De')
ylabel('Tt/Inlet Tt')
grid on
grid minor
legend(SimulationTitle1,SimulationTitle2,'Location','best')

%Plotting the Y = 0.2D Temperature Values
subplot(3,1,2)
hold on
plot(XOverD(:,1),TemperatureSet1(:,2));
if IsSecondSimulation == 1 
    plot(XOverD(:,1),TemperatureSet2(:,2));
end
hold off
title('Y = 0.2D Total Pressure RatioVs X/D')
axis([tempxlimmin tempxlimmax tempylimmin tempylimmax])
xlabel('X/De')
ylabel('Tt/Inlet Tt')
grid on
grid minor
legend(SimulationTitle1,SimulationTitle2,'Location','best')

%Plotting the Y = 0.4D Pressure Values
subplot(3,1,1)
hold on
plot(XOverD(:,1),TemperatureSet1(:,3));
if IsSecondSimulation == 1 
    plot(XOverD(:,1),TemperatureSet2(:,3));
end
hold off
title('Y = 0.4D Total Pressure Ratio Vs X/D')
xlabel('X/De')
ylabel('Tt/Inlet Tt')
axis([tempxlimmin tempxlimmax tempylimmin tempylimmax])
grid on
grid minor
legend(SimulationTitle1,SimulationTitle2,'Location','best')

%% Static Pressure Plotting
figure 
subplot(3,1,3)
hold on
plot(XOverD(:,1),StaticPressureSet1(:,1));
if IsSecondSimulation == 1 
    plot(XOverD(:,1),StaticPressureSet2(:,1));
end
hold off
title('Centerline Total Temperature Ratio Vs X/D')
axis([tempxlimmin tempxlimmax tempylimmin tempylimmax])
xlabel('X/De')
ylabel('Tt/Inlet Tt')
grid on
grid minor
legend(SimulationTitle1,SimulationTitle2,'Location','best')

%Plotting the Y = 0.2D Temperature Values
subplot(3,1,2)
hold on
plot(XOverD(:,1),StaticPressureSet1(:,2));
if IsSecondSimulation == 1 
    plot(XOverD(:,1),StaticPressureSet2(:,2));
end
hold off
title('Y = 0.2D Total Pressure RatioVs X/D')
axis([tempxlimmin tempxlimmax tempylimmin tempylimmax])
xlabel('X/De')
ylabel('Tt/Inlet Tt')
grid on
grid minor
legend(SimulationTitle1,SimulationTitle2,'Location','best')

%Plotting the Y = 0.4D Pressure Values
subplot(3,1,1)
hold on
plot(XOverD(:,1),StaticPressureSet1(:,3));
if IsSecondSimulation == 1 
    plot(XOverD(:,1),StaticPressureSet2(:,3));
end
hold off
title('Y = 0.4D Total Pressure Ratio Vs X/D')
xlabel('X/De')
ylabel('Tt/Inlet Tt')
axis([tempxlimmin tempxlimmax tempylimmin tempylimmax])
grid on
grid minor
legend(SimulationTitle1,SimulationTitle2,'Location','best')